using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class losowanie : MonoBehaviour
{
    public GameObject rod;
    public GameObject tube;
    public float d = 1f;
    public float a = -40;
    public float rotacja = 1;
    public string location = @"D:\Test\WriteLines2.txt";
    private bool t = false;
    private float b;
    private bool p = false;
    private bool m = true;
    public bool losowo = true;
    private int i = 0;
    public int liczbatestow=10;

    IEnumerator RotateTube(float angle, float duration, bool rand)
    {
        if (rand)
        {
            angle = (int)(Random.value * 360 - 180);
        }
        Quaternion from = tube.transform.rotation;
        Quaternion to = tube.transform.rotation;

        to *= Quaternion.Euler(0, angle, 0);

        float elapsed = 0.0f;
        while (elapsed < duration)
        {
            tube.transform.rotation = Quaternion.Slerp(from, to, elapsed / duration);
            elapsed += Time.deltaTime;
            yield return null;
        }
        tube.transform.rotation = to;
    }
    IEnumerator RotateRod(float angle, float duration, bool rand)
    {
        if (rand)
        {
            angle = (int)(Random.value * 720 - 360);
        }
        Quaternion from = rod.transform.rotation;
        Quaternion to = rod.transform.rotation;

        to *= Quaternion.Euler(0, 0, angle);

        float elapsed = 0.0f;
        while (elapsed < duration)
        {
            rod.transform.rotation = Quaternion.Slerp(from, to, elapsed / duration);
            elapsed += Time.deltaTime;
            yield return null;
        }
        rod.transform.rotation = to;
    }

    IEnumerator RotateZeroRod(float duration)
    {
       
        Quaternion from = rod.transform.rotation;
        Quaternion to = Quaternion.Euler(0,0,0);
        

        float elapsed = 0.0f;
        while (elapsed < duration)
        {
            rod.transform.rotation = Quaternion.Slerp(from, to, elapsed / duration);
            elapsed += Time.deltaTime;
            yield return null;
        }
        rod.transform.rotation = to;
    }
    IEnumerator RotateZeroTube(float duration)
    {

        Quaternion from = tube.transform.rotation;
        Quaternion to = Quaternion.Euler(0, 90, 90);

        float elapsed = 0.0f;
        while (elapsed < duration)
        {
            tube.transform.rotation = Quaternion.Slerp(from, to, elapsed / duration);
            elapsed += Time.deltaTime;
            yield return null;
        }
        tube.transform.rotation = to;
    }


    // Use this for initialization
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {

        if (Input.GetKeyDown(KeyCode.Keypad0))
        {
            using (System.IO.StreamWriter file = new System.IO.StreamWriter(location, true))
            {
                file.WriteLine("nowy test");
            }
            i = 0;
            t = true;
            b = a;
            m = true;
        }
        if (i <=liczbatestow  && t && Input.GetKeyDown(KeyCode.KeypadEnter))
        {
            if (m)
            {
                StartCoroutine(RotateZeroTube(d));
                StartCoroutine(RotateZeroRod(d));
                m = false;
            }
            else if (!m && Input.GetKeyDown(KeyCode.KeypadEnter))
            {
                StartCoroutine(RotateTube(b, d, losowo));
                StartCoroutine(RotateRod((-b + 5f), d, losowo));
                p = true;
                t = false;
            }

        }
        else if ((i > liczbatestow && t) || Input.GetKeyDown(KeyCode.End))
        {
            using (System.IO.StreamWriter file = new System.IO.StreamWriter(location, true))
            {
                file.WriteLine("koniec");
            }
            t = false;
            m = true;
        }
        if (p)
        {
            var s = Input.GetAxis("Mouse ScrollWheel");

            if (s > 0)
            {
                rod.transform.rotation *= Quaternion.Euler(0, 0, 0.5f);
            }
            else if (s < 0)
            {
                rod.transform.rotation *= Quaternion.Euler(0, 0, -0.5f);
            }
            if (Input.GetKeyDown(KeyCode.Space))
            {
                using (System.IO.StreamWriter file = new System.IO.StreamWriter(location, true))
                {
                    file.WriteLine(rod.transform.eulerAngles.z);
                }

                b += 10;
                p = false;
                t = true;
                m = true;
            }
        }

        


    }



}

